Search.setIndex({docnames:["_autosummary/automatapy.NFA","_autosummary/automatapy.automata.EpsilonNFA","_autosummary/automatapy.automata.NFA","_autosummary/automatapy.regex.Alternation","_autosummary/automatapy.regex.Concatenation","_autosummary/automatapy.regex.KleeneStar","_autosummary/automatapy.regex.Letter","index","modules"],envversion:{"sphinx.domains.c":2,"sphinx.domains.changeset":1,"sphinx.domains.citation":1,"sphinx.domains.cpp":4,"sphinx.domains.index":1,"sphinx.domains.javascript":2,"sphinx.domains.math":2,"sphinx.domains.python":3,"sphinx.domains.rst":2,"sphinx.domains.std":2,sphinx:56},filenames:["_autosummary/automatapy.NFA.rst","_autosummary/automatapy.automata.EpsilonNFA.rst","_autosummary/automatapy.automata.NFA.rst","_autosummary/automatapy.regex.Alternation.rst","_autosummary/automatapy.regex.Concatenation.rst","_autosummary/automatapy.regex.KleeneStar.rst","_autosummary/automatapy.regex.Letter.rst","index.rst","modules.rst"],objects:{"automatapy.automata":[[1,0,1,"","EpsilonNFA"],[2,0,1,"","NFA"]],"automatapy.automata.EpsilonNFA":[[1,1,1,"","__init__"],[1,1,1,"","add_state"],[1,1,1,"","add_transition"],[1,1,1,"","get_final_states"],[1,1,1,"","get_initial_states"],[1,1,1,"","get_states"],[1,1,1,"","get_transitions"],[1,1,1,"","set_final"],[1,1,1,"","to_nfa"]],"automatapy.automata.NFA":[[2,1,1,"","__init__"],[2,1,1,"","accepts"],[2,1,1,"","add_state"],[2,1,1,"","add_transition"],[2,1,1,"","determinize"],[2,1,1,"","get_final_states"],[2,1,1,"","get_initial_states"],[2,1,1,"","get_states"],[2,1,1,"","get_transitions"],[2,1,1,"","set_final"]],"automatapy.regex":[[3,0,1,"","Alternation"],[4,0,1,"","Concatenation"],[5,0,1,"","KleeneStar"],[6,0,1,"","Letter"]],"automatapy.regex.Alternation":[[3,1,1,"","__init__"],[3,1,1,"","accept"]],"automatapy.regex.Concatenation":[[4,1,1,"","__init__"],[4,1,1,"","accept"]],"automatapy.regex.KleeneStar":[[5,1,1,"","__init__"],[5,1,1,"","accept"]],"automatapy.regex.Letter":[[6,1,1,"","__init__"],[6,1,1,"","accept"]]},objnames:{"0":["py","class","Python class"],"1":["py","method","Python method"]},objtypes:{"0":"py:class","1":"py:method"},terms:{"class":[1,2,3,4,5,6],"final":[1,2],"return":[1,2],A:[1,2],If:2,The:[1,2],__init__:[1,2,3,4,5,6],accept:[2,3,4,5,6],add:[1,2],add_stat:[1,2],add_transit:[1,2],alphabet:2,an:[1,2],ani:[1,2],argument:2,automata:7,automaton:[1,2],bool:[1,2],check:2,collect:[1,2],construct:2,convert:1,core:[1,2],creat:[1,2],determin:[1,2],determinist:2,dfa:2,dict:[1,2],done:2,epsilon:1,fals:[1,2],finit:[1,2],get_final_st:[1,2],get_initial_st:[1,2],get_stat:[1,2],get_transit:[1,2],given:[1,2],hashabl:[1,2],implement:[1,2],index:7,initi:[1,2],kwarg:[1,2],letter:[1,2],made:[1,2],make:[1,2],method:[1,2,3,4,5,6],modul:7,name:[1,2],newli:[1,2],nfa:1,nondeterminist:[1,2],none:[1,2],option:2,page:7,paramet:[1,2],powerset:2,properti:[1,2],r1:[3,4],r2:[3,4],r:[2,5],read:[1,2],regex:7,regex_visitor:[3,4,5,6],regexvisitor:[3,4,5,6],search:7,sequenc:2,set:[1,2],set_fin:[1,2],sourc:[1,2],specifi:[1,2],state:[1,2],str:[1,2],t:2,target:[1,2],to_nfa:1,transit:[1,2],type:[1,2],w:2,whether:[1,2]},titles:["automatapy.NFA","automatapy.automata.EpsilonNFA","automatapy.automata.NFA","automatapy.regex.Alternation","automatapy.regex.Concatenation","automatapy.regex.KleeneStar","automatapy.regex.Letter","automatapy Documentation","Modules"],titleterms:{altern:3,automata:[1,2,8],automatapi:[0,1,2,3,4,5,6,7],concaten:4,content:7,document:7,epsilonnfa:1,indic:7,kleenestar:5,letter:6,modul:8,nfa:[0,2],regex:[3,4,5,6,8],tabl:7}})